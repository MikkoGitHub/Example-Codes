using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace ObjectReferences
{

//this is basic example of grouping events and using sender as object reference
//here we get (button)sender in temp holder, extract the tag/name and use it as reference for the object


    public partial class Form1 : Form
    {

//to make life simple, just create bool array for the "switches", in this example i wanted to keep it raw.

    bool Butt1 = false;
    bool Butt2 = false;
    bool Butt3 = false;
    bool Butt4 = false;

        public Form1()
        {
            InitializeComponent();
        }

        private void ButtonPressEvent(object sender, EventArgs e)
        {
            Button tempButton = (Button)sender;

            ButtonCheck(sender);

            //you can make this much cleaner with arrays, but as said in the earlier comment i wanted to keep this one raw
            if(Butt1 == true && Butt2 == true && Butt3 == true && Butt4 == true)
            {
                MessageBox.Show("They all returned true!");

                Butt1 = false; Butt2 = false; Butt3 = false; Butt4 = false;
            }
        }

        private void ButtonCheck(object sender)
        {
        //Tag is default string, so we have to typecast it into Int in order to compare the object tag to int
        
            Button TempButton = (Button)sender;
            if(Convert.ToInt32(TempButton.Tag) == 1)
            {
                Butt1 = true;
            }

            if (Convert.ToInt32(TempButton.Tag) == 2)
            {
                Butt2 = true;
            }

            if (Convert.ToInt32(TempButton.Tag) == 3)
            {
                Butt3 = true;
            }

            if (Convert.ToInt32(TempButton.Tag) == 4)
            {
                Butt4 = true;
            }
        }
    }
}
